package Chip8

const (
	programStartAddress = 0x200 
	fontMemoryAddress = 0x050 	
	charPixelWidth = 4 
	charPixelHeight = 5 
)

type Chip8 struct {
	Opcode uint16
	Memory [4096]byte
	V [16]uint8
	I uint16
	Pc uint16
	Gfx [32][64]bool
	DelayTimer uint8
	SoundTimer uint8
	Stack [16]uint16
	Sp uint16
	Key [16]uint8
	PixelWidth uint16
	PixelHeight uint16
	Scale int
}
// New initializes a new Chip8 instance with default values.
// The program counter starts at 0x200, and the font set is loaded into memory starting at 0x050.
// The pixel dimensions are set to the default character size of 4x5 pixels.
func New() *Chip8 {
	c := &Chip8{
		Pc: programStartAddress, // Program counter starts at 0x200
		PixelWidth: charPixelWidth, // Default pixel PixelWidth
		PixelHeight: charPixelHeight, // Default pixel PixelHeight
		Scale: 2, // Default scale factor
	}

	for i, v := range fontset {
		c.Memory[fontMemoryAddress+i] = v 	
	}

	return c
}


var fontset = []byte {
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80,  // F
}
